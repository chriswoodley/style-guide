/*
# Base Styles

Styleguide 1
*/
* {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
}

html {
  font-family: "HelveticaNeue", "Helvetica", Arial, sans-serif;
  font-size: 87.5%;
  line-height: 1.5;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

.styleguide__elements {
  background-image: url(http://basehold.it/i/21/204/40/130);
  background-repeat: repeat;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: middle;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/*
# Headings

Heading elements implement six levels of document headings, &lt;h1&gt; is the most important and &lt;h6&gt; is the least. A heading element briefly describes the topic of the section it introduces. Heading information may be used by user agents, for example, to construct a table of contents for a document automatically.

Markup: <h1>Heading level 1</h1>
<h2>Heading level 2</h2>
<h3>Heading level 3</h3>
<h4>Heading level 4</h4>
<h5>Heading level 5</h5>
<h6>Heading level 6</h6>

Styleguide 1.0.1
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 0;
  margin-top: 0;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2.61793em;
  line-height: 1.14594;
  margin-bottom: 0.57297em;
}

h2 {
  font-size: 2.06121em;
  line-height: 1.09159;
  margin-bottom: 0.72773em;
}

h3 {
  font-size: 1.618em;
  line-height: 1.39061;
  margin-bottom: 0.92707em;
}

h4 {
  font-size: 1.27393em;
  line-height: 1.17746;
  margin-bottom: 1.17746em;
}

h5 {
  font-size: 1em;
  line-height: 1.5;
  margin-bottom: 1.5em;
}

h6 {
  font-size: 0.78736em;
  line-height: 1.90511;
  margin-bottom: 1.90511em;
}

/*
# Address

The HTML &lt;address&gt; Element may be used by authors to supply contact information for its nearest &lt;article&gt; or &lt;body&gt; ancestor; in the latter case, it applies to the whole document.

Markup: <address>
  You can contact author at <a href="http://www.somedomain.com/contact">www.somedomain.com</a>.<br>
  If you see any bugs, please <a href="mailto:webmaster@somedomain.com">contact webmaster</a>.<br>
  You may also want to visit us:<br>
  Mozilla Foundation<br>
  1981 Landings Drive<br>
  Building K<br>
  Mountain View, CA 94043-0801<br>
  USA
</address>

Styleguide 1.0.2
*/
address {
  color: #666666;
  font-style: normal;
  margin: 1.5em 0;
}

/*
# Paragraphs

The HTML &lt;p&gt; element (or HTML Paragraph Element) represents a paragraph of text. Paragraphs are block-level elements.

Markup: <p>This is the first paragraph of text. This is the first paragraph of text. This is the first paragraph of text. This is the first paragraph of text.</p>
<p>This is second paragraph of text. This is second paragraph of text. This is second paragraph of text. This is second paragraph of text.</p>

Styleguide 1.0.3
*/
p,
pre,
figure {
  margin: 0 0 1.5em;
}

/*
# Horizontal Rule

In HTML5 the HTML &lt;hr&gt; element represents a thematic break between paragraph-level elements (for example, a change of scene in a story, or a shift of topic with a section). In previous versions of HTML, it represented a horizontal rule. It may still be displayed as a horizontal rule in visual browsers, but is now defined in semantic terms, rather than presentational terms.

Markup: <p>This is the first paragraph of text. This is the first paragraph of text. This is the first paragraph of text. This is the first paragraph of text.</p>
<hr>
<p>This is second paragraph of text. This is second paragraph of text. This is second paragraph of text. This is second paragraph of text.</p>

Styleguide 1.0.4
*/
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  border: 0;
  border-top: 1px solid #222222;
  clear: both;
  display: block;
  height: 0;
  margin: 0 0 1.42857em;
  padding: 0;
}

/*
# Preformatted Text

The HTML &lt;pre&gt; Element (or HTML Preformatted Text) represents preformatted text. Text within this element is typically displayed in a non-proportional font exactly as it is laid out in the file. Whitespaces inside this element are displayed as typed.

Markup: <!-- Some example CSS code -->
<pre>
body {
  color:red;
}
</pre>
<pre><code class="language-pascal">var i: Integer;
begin
   i := 1;
end.</code></pre>

Styleguide 1.0.5
*/
/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/*
# Blockquotes

The HTML &lt;blockquote&gt; Element (or HTML Block Quotation Element) indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation (see Notes for how to change it). A URL for the source of the quotation may be given using the cite attribute, while a text representation of the source can be given using the &lt;cite&gt; element.

Markup: <blockquote cite="http://developer.mozilla.org">
  <p>This is a quotation taken from the Mozilla Developer Center.</p>
</blockquote>
<blockquote>
  This is a quotation taken from the Mozilla Developer Center.
  <cite>Chris Woodley</cite>
</blockquote>

Styleguide 1.0.6
*/
blockquote {
  border-left: 4px solid #cccccc;
  margin: 0 2.61793em 1.5em;
  padding-left: 0.65448em;
  quotes: "\201C" "\201D" "\2018" "\2019";
}
blockquote > p {
  display: inline;
}
blockquote cite {
  color: #999999;
  display: block;
}
blockquote cite:before {
  content: '- ';
}

/*
# Unordered Lists

The HTML unordered list element (&lt;ul&gt;) represents an unordered list of items, namely a collection of items that do not have a numerical ordering, and their order in the list is meaningless.<br><br>

Markup:
<ul>
  <li>first item</li>
  <li>second item</li>
  <li>third item
    <ul>
      <li>sub list item</li>
      <li>sub list item</li>
      <li>sub list item</li>
    </ul>
  </li>
</ul>

Styleguide 1.0.7
*/
ul {
  margin: 0 0 1.5em;
  padding: 0 0 0 2.61793em;
}

/*
# Ordered Lists

The HTML &lt;ol&gt; Element (or HTML Ordered List Element) represents an ordered list of items. Typically, ordered-list items are displayed with a preceding numbering, which can be of any form, like numerals, letters or Romans numerals or even simple bullets.<br><br>

Markup:
<ol>
    <li>first item</li>
    <li>second item</li>
    <li>third item
    <ul>
      <li>sub list item</li>
      <li>sub list item</li>
      <li>sub list item</li>
    </ul>
  </li>
</ol>

Styleguide 1.0.8
*/
ol {
  margin: 0 0 1.5em;
  padding: 0 0 0 2.61793em;
}

/*
# Definition Lists

The HTML &lt;dl&gt; Element (or HTML Description List Element) encloses a list of pairs of terms and descriptions. Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs). The HTML &lt;dt&gt; element (or HTML Definition Term Element) identifies a term in a definition list. The HTML &lt;dd&gt; Element (or HTML Description Element) indicates the description of a term in a description list (&lt;dl&gt;) element.

Markup:
<dl>
  <dt>Firefox</dt>
  <dd>A free, open source, cross-platform, graphical web browser
      developed by the Mozilla Corporation and hundreds of volunteers.</dd>
</dl>
<!-- Multiple terms, single description -->
<dl>
  <dt>Firefox</dt>
  <dt>Mozilla Firefox</dt>
  <dt>Fx</dt>
  <dd>A free, open source, cross-platform, graphical web browser
      developed by the Mozilla Corporation and hundreds of volunteers.</dd>
</dl>
<!-- Single term, multiple descriptions -->
<dl>
  <dt>Firefox</dt>
  <dd>A free, open source, cross-platform, graphical web browser
      developed by the Mozilla Corporation and hundreds of volunteers.</dd>
  <dd>The Red Panda also known as the Lesser Panda, Wah, Bear Cat or Firefox,
      is a mostly herbivorous mammal, slightly larger than a domestic cat
      (60 cm long).</dd>
</dl>

Styleguide 1.0.9
*/
dl {
  margin: 0 0 1.5em;
}

dt {
  font-weight: bold;
}

dd {
  margin: 0 0 0 2.61793em;
}

/*
# Figure & Figcaption

The HTML &lt;figure&gt; Element represents self-contained content, frequently with a caption (&lt;figcaption&gt;), and is typically referenced as a single unit. While it is related to the main flow, its position is independent of the main flow. Usually this is an image, an illustration, a diagram, a code snippet, or a schema that is referenced in the main text, but that can be moved to another page or to an appendix without affecting the main flow.

Markup: <!-- Just a figure -->
<figure>
  <img src="http://fpoimg.com/250x210" alt="An awesome picture">
</figure>
<!-- Figure with figcaption -->
<figure>
  <img src="http://fpoimg.com/250x210" alt="An awesome picture">
  <figcaption>Caption for the awesome picture</figcaption>
</figure>

Styleguide 1.1.0
*/
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  border-bottom: 1px dotted #cccccc;
  border-top: 1px dotted #cccccc;
  margin: 1.42857em;
  padding: 1.5em;
  text-align: center;
}

figcaption {
  font-size: 0.78736em;
  line-height: 1.90511;
}

/*
# Standard Links

Your standard hyperlinks. Removed the gray background color from active links in IE 10 by setting background to transparent. However, you can specifiy a background color for each state using the mixin defined below:

Usage:
<pre>a {
  @include link-colors($foreground: 'blue' 'green' 'red', $background: 'black' 'gray' 'white');
}</pre>

Markup: <a href="#" class="$modifierClass">Example</a>

:hover    - The mouseover state
:active   - The mouse down state

Styleguide 1.1.1
*/
a {
  color: blue;
  background: transparent;
}
a:hover, a:focus {
  color: green;
}
a:active {
  color: red;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/*
# Emphasis and Strong

The HTML Strong Element (&lt;strong&gt;) gives text strong importance, and is typically displayed in bold.
The HTML &lt;em&gt; element (or HTML Emphasis Element) marks text that has stress emphasis.

Markup: <p>When doing x it is <strong>imperative</strong> to do y before proceeding.</p>
<p>In HTML 5, what was previously called <em>block-level</em> content is now called <em>flow</em> content.</p>

Styleguide 1.1.2
*/
/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 * Fix line height issue.
 */
b,
strong {
  font-weight: bold;
  line-height: 1em;
}

/*
# Small

The HTML Small Element (&lt;small&gt;) makes the text font size one size smaller (for example, from large to medium, or from small to x-small) down to the browser's minimum font size.  In HTML5, this element is repurposed to represent side-comments and small print, including copyright and legal text, independent of its styled presentation.

Markup: <p>This is the first sentence.  <small>This whole sentence is in small letters.</small></p>

Styleguide 1.1.3
*/
/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 0.78736em;
  line-height: 1.90511;
}

/*
# Quote

The HTML &lt;q&gt; Element (or HTML Quote Element) indicates that the enclosed text is a short inline quotation. This element is intended for short quotations that don't require paragraph breaks; for long quotations use &lt;blockquote&gt; element.

Markup: <p>Everytime Kenny is killed, Stan will announce
   <q cite="http://en.wikipedia.org/wiki/Kenny_McCormick#Cultural_impact">
     Oh my God, you/they killed Kenny!
   </q>.
</p>

Styleguide 1.1.4
*/
q {
  quotes: "\201C" "\201D";
}

/*
# Definition

The HTML &lt;dfn&gt; element (or HTML Definition Element) represents the defining instance of a term.

Markup: <p><dfn id="def-internet">The Internet</dfn> is a global system of interconnected networks that use the Internet Protocol Suite (TCP/IP) to serve billions of users worldwide.</p>
<dl>
  <!-- Define "World-Wide Web" and reference definition for "the Internet" -->
  <dt>
    <dfn>
      <abbr title="World-Wide Web">WWW</abbr>
    </dfn>
  </dt>
  <dd>The World-Wide Web (WWW) is a system of interlinked hypertext documents accessed on <a href="#def-internet">the Internet</a>.</dd>
</dl>

Styleguide 1.1.5
*/
/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/*
# Abbreviations

The HTML &lt;abbr&gt; Element (or HTML Abbreviation Element) represents an abbreviation and optionally provides a full description for it. If present, the title attribute must contain this full description and nothing else.

Markup: <p>Tony Blair is the prime minister of the <abbr title="United Kingdom">UK</abbr></p>

Styleguide 1.1.6
*/
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr {
  text-transform: uppercase;
}

abbr[title] {
  border-bottom: 1px dotted;
}

/*
# Code, Pre, Kbd, Samp

The HTML &lt;code&gt; Element represents a fragment of computer code. By default, it is displayed in the browser's default monospace font.

The HTML &lt;samp&gt; element is an element intended to identify sample output from a computer program. It is usually displayed in the browser's default monotype font (such as Lucida Console).

The HTML &lt;kbd&gt; Element (or HTML Keyboard Input Element) represents user input and produces an inline element displayed in the browser's default monotype font.

Markup: <p>Regular text. <code>This is code.</code> Regular text.</p>
<p>Regular text. <samp>This is sample text.</samp> Regular text.</p>
<p>Type the following in the Run dialog: <kbd>cmd</kbd><br />Then click the OK button.</p>

Styleguide 1.1.7
*/
/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

p code,
p kbd,
p samp {
  background: #ffeddd;
  border-radius: 4px;
  color: #ff4136;
  font-size: 90%;
  padding: .1em .5em;
  white-space: nowrap;
}

/*
# Subscript and Superscript

The HTML Subscript Element (&lt;sub&gt;) defines a span of text that should be displayed, for typographic reasons, lower, and often smaller, than the main span of text.
The HTML Superscript Element (&lt;sup&gt;) defines a span of text that should be displayed, for typographic reasons, higher, and often smaller, than the main span of text.

Markup: <p>The chemical formula of water is H<sub>2</sub>O</p>
<p>This text is <sup>superscripted</sup></p>

Styleguide 1.1.8
*/
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*
# Mark

The HTML &lt;mark&gt; Element represents highlighted text, i.e., a run of text marked for reference purpose, due to its relevance in a particular context. For example it can be used in a page showing search results to highlight every instance of the searched for word.

Markup: <p>The &lt;mark&gt; element is used to <mark>highlight</mark> text</p>

Styleguide 1.1.9
*/
/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ffdc00;
  color: #222222;
}

/*
# Images

The HTML &lt;img&gt; Element (or HTML Image Element) represents an image of the document.

Markup: <img src="http://fpoimg.com/200x252" alt="" />
<a href="https://developer.mozilla.org/" target="_blank"><img src="http://fpoimg.com/200x150?text=Hyperlinked Image" alt="" /></a>

Styleguide 1.2.0
*/
img,
svg {
  vertical-align: middle;
}

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
  height: auto;
  image-rendering: -moz-crisp-edges;
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  -ms-interpolation-mode: bicubic;
  max-width: 100%;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/*
# Form Buttons

The HTML &lt;button&gt; and &lt;input type="submit" value="Submit" /&gt; element represents a clickable button.

Markup: <button type="submit" >Submit</button>
<button type="reset" >Reset</button>
<button type="button" >Click me</button>
<input type="submit" value="Submit" />
<input type="reset" value="Reset" />

Styleguide 1.2.1
*/
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

button,
input[type="submit"],
input[type="reset"] {
  padding: 0 .5em;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  color: #999999;
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
# Inputs & Labels

The HTML &lt;input&gt; element is used to create interactive controls for web-based forms.

The HTML &lt;label&gt; Element represents a caption for an item in a user interface. It can be associated with a control either by placing the control element inside the label element, or by using the for attribute. Such a control is called the labeled control of the label element.

We can use the .inline helper class to display the form controls side by side. See the checkbox example.


Markup: <div><label>Text: <input type="text" name="fn" value=""></label></div>
<div><label for="search">Search: </label><input name="search" type="search" value=""></div>
<div><label for="tel">Tel: </label><input name="tel" type="tel" value=""> <small>Format: AB12 3CD</small></div>
<div><label for="url">URL: </label><input name="url" type="url" value=""></div>
<div><label for="email">Email: </label><input name="email" type="email" value=""> <small>Format: name@host.com</small></div>
<div><label for="pwd">Password: </label><input name="pwd" type="password" value=""></div>
<div><label for="date">Date: </label><input name="date" type="date" value=""></div>
<div><label for="t">Time: </label><input name="t" type="time" value=""></div>
<div><label for="num">Number: </label><input name="num" type="number" value=""></div>
<div><label class="inline">Checkbox1: <input name="check[]" type="checkbox" value="yes"></label> <label class="inline">Checkbox2: <input name="check[]" type="checkbox" value="No"></label></div>
<div><input name="r1" type="radio" value="yes"> <label for="r1" class="inline">Radio1</label> <input name="r1" type="radio" value="No"> <label for="r1" class="inline">Radio2</label></div>
<div><label for="fl">File: </label><input name="fl" type="file"></div>

Styleguide 1.2.2
*/
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {
  border: 1px solid #cccccc;
  box-shadow: inset 0 2px 5px rgba(204, 204, 204, 0.5);
  display: block;
  line-height: 1.21429;
  padding: 0.07143em 0.21429em;
  outline: 0;
  width: 100%;
}
input[type="date"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="email"]:focus,
input[type="month"]:focus,
input[type="number"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="text"]:focus,
input[type="time"]:focus,
input[type="url"]:focus,
input[type="week"]:focus {
  border: 1px solid #0074d9;
  box-shadow: none;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  height: 14px;
  padding: 0;
  width: 14px;
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

label {
  display: block;
  font-weight: bold;
  max-width: 100%;
}
label input,
label select,
label textarea {
  font-weight: normal;
}

/*
# Textarea

The HTML &lt;textarea&gt; element represents a multi-line plain-text editing control.

Markup: <p>If you have any comments, please let us know:</p>
<textarea cols="80" name="comments">You rock!</textarea>

Styleguide 1.2.3
*/
/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  border: 1px solid #cccccc;
  box-shadow: inset 0 2px 5px rgba(204, 204, 204, 0.5);
  display: block;
  height: auto;
  min-height: 7.5em;
  outline: 0;
  overflow: auto;
  resize: vertical;
  width: 100%;
}
textarea:focus {
  border: 1px solid #0074d9;
  box-shadow: none;
}

textarea[rows] {
  height: auto;
}

textarea[cols] {
  width: auto;
}

textarea[contenteditable] {
  -webkit-appearance: none;
}

/*
# Select

The HTML select (&lt;select&gt;) element represents a control that presents a menu of options. The options within the menu are represented by &lt;option&gt; elements, which can be grouped by <optgroup> elements. Options can be pre-selected for the user.

In a Web form, the HTML &lt;optgroup&gt; element  creates a grouping of options within a &lt;select&gt; element.

Markup: <!-- The second value will be selected initially -->
<select name="select">
  <option value="value1">Value 1</option>
  <option value="value2" selected>Value 2</option>
  <option value="value3">Value 3</option>
</select>
<!-- Select with optgroup -->
<select>
  <optgroup label="Group 1">
    <option>Option 1.1</option>
  </optgroup>
  <optgroup label="Group 2">
    <option>Option 2.1</option>
    <option>Option 2.2</option>
  </optgroup>
  <optgroup label="Group 3" disabled>
    <option>Option 3.1</option>
    <option>Option 3.2</option>
    <option>Option 3.3</option>
  </optgroup>
</select>
<!-- Multiple Select -->
<select name="select" multiple>
  <option value="value1">Value 1</option>
  <option value="value2" selected>Value 2</option>
  <option value="value3">Value 3</option>
</select>

Styleguide 1.2.4
*/
/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

select {
  border: 1px solid #cccccc;
  display: block;
  height: 1.35714em;
  outline: 0;
  width: 100%;
}
select:hover {
  background-color: #f6fbff;
  border-color: #0074d9;
}
select[multiple] {
  height: auto;
}

/*
# Fieldset and Legends

The HTML &lt;fieldset&gt; element is used to group several controls as well as labels (&lt;label&gt;) within a web form.

The HTML &lt;legend&gt; Element (or HTML Legend Field Element) represents a caption for the content of its parent &lt;fieldset&gt;.

Markup: <fieldset>
  <legend>Title</legend>
  <input type="radio" name="radio" id="radio"> <label for="radio" class="inline">Click me</label>
</fieldset>
<fieldset>
  <legend>More Info</legend>
  <label for="info">Info</label>
  <input type="text" name="info" id="info">
</fieldset>

Styleguide 1.2.5
*/
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 0;
  margin: 0 0 1.5em;
  padding: 1.5em;
}
fieldset > :last-child {
  margin-bottom: 0;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  border-bottom: 1px solid #cccccc;
  display: block;
  font-size: 1.618em;
  line-height: 1.85414;
  margin-bottom: 0.88292em;
  padding: 0;
  width: 100%;
}

/*
# Table

The HTML Table Element (&lt;table&gt;) represents data in two dimensions or more.

The HTML &lt;caption&gt; Element (or HTML Table Caption Element) represents the title of a table. Though it is always the first descendant of a &lt;table&gt;, its styling, using CSS, may place it elsewhere, relative to the table.

Markup: <p>Table with thead, tfoot, tbody, and caption</p>
<table>
  <caption>Awesome caption (Table title)</caption>
  <thead>
    <tr>
      <th>Header content 1</th>
      <th>Header content 2</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td>Footer content 1</td>
      <td>Footer content 2</td>
    </tr>
  </tfoot>
  <tbody>
    <tr>
      <td>Body content 1</td>
      <td>Body content 2</td>
    </tr>
  </tbody>
</table>

Styleguide 1.2.6
*/
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
  line-height: 1.6;
  margin: 0 0 1.5em;
  width: 100%;
}

td,
th {
  padding: 0.75em 1em;
  vertical-align: top;
}

th {
  font-weight: bold;
  text-align: center;
}

caption,
tfoot td {
  text-align: left;
}

caption {
  font-size: 1.27393em;
  line-height: 1.17746;
}

tfoot td {
  font-size: 0.78736em;
  line-height: 1.90511;
  padding: 1.00018em 1em;
}

.grid__row:before, .menu:before, .menu-1:before, .menu-2:before, .menu-3:before, .menu-4:before, .form .form__row:before, .clearfix:before, .grid__row:after, .menu:after, .menu-1:after, .menu-2:after, .menu-3:after, .menu-4:after, .form .form__row:after, .clearfix:after {
  content: ' ';
  display: table;
}
.grid__row:after, .menu:after, .menu-1:after, .menu-2:after, .menu-3:after, .menu-4:after, .form .form__row:after, .clearfix:after {
  clear: both;
}

.menu, .menu-1, .menu-2, .menu-3, .menu-4, .sub-menu, .unstyled-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.menu > .menu__item > a, .menu-1 > .menu-1__item > a, .menu-2 > .menu-2__item > a, .menu-3 > .menu-3__item > a, .menu-4 > .menu-4__item > a, .sub-menu a {
  display: block;
  text-decoration: none;
}

.inline {
  display: inline-block;
  width: auto;
}

/*
# Grid

Styleguide 2
*/
/*
# Grid Container

This mixin defines the max width of the page and is used in context with setting column widths within the layout.

<pre>.grid {
  @include grid($site-width);
}</pre>

Markup:
<div class="grid">.grid</div>

Styleguide 2.0.1
*/
.grid__col-1, .grid__col-2, .primary, .secondary, .offset-right, .offset-left, .form .form__col {
  float: left;
  position: relative;
}

.grid {
  width: 95%;
  margin: 0 auto;
}
@media screen and (min-width: 48em) {
  .grid {
    max-width: 71.25em;
  }
}

/*
# Grid Row

This mixin defines rows within the layout. Its used to clear column floats.

<pre>.grid__row {
  @include grid-row();
}</pre>

Markup:
<div class="grid">
  <div class="grid__row">.grid__row</div>
</div>

Styleguide 2.0.2
*/
/*
# Grid Column

This mixin defines columns within a row. The <code>%grid-col</code> placeholder is used to group common styles for all columns.

<pre>.grid__col-1 {
  @extend %grid-col;
  @include grid-col($span: 1, $columns: $mobile-columns, $gutter: right, $gutter-size: $mobile-gutter);
}
.grid__col-2 {
  @extend %grid-col;
  @include grid-col($span: 3, $columns: $mobile-columns, $gutter: left, $gutter-size: $mobile-gutter);
}</pre>

Markup:
<div class="grid">
  <div class="grid__row">
    <div class="grid__col-1">
      .grid__col-1
    </div>
    <div class="grid__col-2">
      .grid__col-2
    </div>
  </div>
</div>

Styleguide 2.0.3
*/
.grid__col-1 {
  width: 25%;
  padding: 0 10px 0 0;
}

.grid__col-2 {
  width: 75%;
  padding: 0 0 0 10px;
}

/*
# Grid Column Ordering

This mixin defines column positioning commonly used for source ordering content.

<pre>.primary {
  @extend %grid-col;
  @include grid-col($span: 1, $columns: $mobile-columns, $gutter: right, $gutter-size: $mobile-gutter);
  @include grid-col-order($direction: left, $span: 3, $columns: $mobile-columns);
}
.secondary {
  @extend %grid-col;
  @include grid-col($span: 3, $columns: $mobile-columns, $gutter: left, $gutter-size: $mobile-gutter);
  @include grid-col-order($direction: right, $span: 1, $columns: $mobile-columns);
}</pre>

Markup:
<div class="grid">
  <div class="grid__row">
    <div class="primary">
      .primary
    </div>
    <div class="secondary">
      .secondary
    </div>
  </div>
</div>

Styleguide 2.0.4
*/
.primary {
  width: 25%;
  padding: 0 10px 0 0;
  left: 75%;
}

.secondary {
  width: 75%;
  padding: 0 0 0 10px;
  right: 25%;
}

/*
# Grid Column Offsets

This mixin defines column offsets using left and right margins.

<pre>.offset-right {
  @extend %grid-col;
  @include grid-col($span: 1, $columns: $mobile-columns, $gutter: right, $gutter-size: $mobile-gutter);
  @include grid-col-offset($direction: right, $span: 1, $columns: $mobile-columns);
}
.offset-left {
  @extend %grid-col;
  @include grid-col($span: 1, $columns: $mobile-columns, $gutter: left, $gutter-size: $mobile-gutter);
  @include grid-col-offset($direction: left, $span: 1, $columns: $mobile-columns);
}</pre>

Markup: <div class="grid">
  <div class="grid__row">
    <div class="offset-left">
      .offset-left
    </div>
    <div class="offset-right">
      .offset-right
    </div>
  </div>
</div>

Styleguide 2.0.5
*/
.offset-right {
  width: 25%;
  padding: 0 10px 0 0;
  margin-right: 25%;
}

.offset-left {
  width: 25%;
  padding: 0 0 0 10px;
  margin-left: 25%;
}

/*
# Menu

Styleguide 3
*/
/*
# Default Menu

These mixins defines the styles necessary for the top level navigation module. The <code>%unstyled-list</code> placeholder is used to reset the styles of list markup and can be reused for sub menus.

<pre>.menu {
  @extend %unstyled-list;
  @include menu();
  &>.menu__item {
    @include menu-item();
    &>a {
      @extend %block-link;
      padding: .75em;
      @include link-colors($foreground: 'purple' 'yellow' 'yellow', $background: '#e0774c' 'blue' 'purple');
    }
  }
}</pre>

Markup: <nav role="navigation">
  <ul class="menu">
    <li class="menu__item"><a href="#">Item 1</a></li>
    <li class="menu__item"><a href="#">Item 2</a></li>
    <li class="menu__item"><a href="#">Item 3</a></li>
    <li class="menu__item"><a href="#">Item 4</a></li>
    <li class="menu__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 3.0.1
*/
.menu > .menu__item {
  position: relative;
  display: block;
  float: left;
}
.menu > .menu__item > a {
  padding: .75em;
  background-color: #e0774c;
  color: purple;
}
.menu > .menu__item > a:hover, .menu > .menu__item > a:focus {
  background-color: blue;
  color: yellow;
}
.menu > .menu__item > a:active {
  background-color: purple;
  color: yellow;
}

/*
# Right Menu

Right aligned menu.

<pre>.menu-1 {
  @extend %unstyled-list;
  @include menu($align: right);
  &>.menu-1__item {
    @include menu-item();
    &>a {
      @extend %block-link;
      padding: .75em;
      @include link-colors($foreground: 'purple' 'yellow' 'yellow', $background: '#e0774c' 'blue' 'purple');
    }
  }
}</pre>

Markup:
<nav role="navigation">
  <ul class="menu-1">
    <li class="menu-1__item"><a href="#">Item 1</a></li>
    <li class="menu-1__item"><a href="#">Item 2</a></li>
    <li class="menu-1__item"><a href="#">Item 3</a></li>
    <li class="menu-1__item"><a href="#">Item 4</a></li>
    <li class="menu-1__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 3.0.2
*/
.menu-1 {
  display: table;
  margin-left: auto;
}
.menu-1 > .menu-1__item {
  position: relative;
  display: block;
  float: left;
}
.menu-1 > .menu-1__item > a {
  padding: .75em;
  background-color: #e0774c;
  color: purple;
}
.menu-1 > .menu-1__item > a:hover, .menu-1 > .menu-1__item > a:focus {
  background-color: blue;
  color: yellow;
}
.menu-1 > .menu-1__item > a:active {
  background-color: purple;
  color: yellow;
}

/*
# Center Menu

Center aligned menu.

<pre>.menu-2 {
  @extend %unstyled-list;
  @include menu($align: center);
  &>.menu-2__item {
    @include menu-item();
    & > a {
      @extend %block-link;
      padding: .75em;
      @include link-colors($foreground: 'purple' 'yellow' 'yellow', $background: '#e0774c' 'blue' 'purple');
    }
  }
}</pre>

Markup:
<nav role="navigation">
  <ul class="menu-2">
    <li class="menu-2__item"><a href="#">Item 1</a></li>
    <li class="menu-2__item"><a href="#">Item 2</a></li>
    <li class="menu-2__item"><a href="#">Item 3</a></li>
    <li class="menu-2__item"><a href="#">Item 4</a></li>
    <li class="menu-2__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 3.0.3
*/
.menu-2 {
  display: table;
  margin-left: auto;
  margin-right: auto;
}
.menu-2 > .menu-2__item {
  position: relative;
  display: block;
  float: left;
}
.menu-2 > .menu-2__item > a {
  padding: .75em;
  background-color: #e0774c;
  color: purple;
}
.menu-2 > .menu-2__item > a:hover, .menu-2 > .menu-2__item > a:focus {
  background-color: blue;
  color: yellow;
}
.menu-2 > .menu-2__item > a:active {
  background-color: purple;
  color: yellow;
}

/*
# Justified Menu

Justified menu that spans accross entire width and has equal width menu items.

<pre>.menu-3 {
  @extend %unstyled-list;
  @include menu($align: justified);
  &>.menu-3__item {
    @include menu-item($align: justified, $num: 5);
    &>a {
      @extend %block-link;
      padding: .75em;
      @include link-colors($foreground: 'purple' 'yellow' 'yellow', $background: '#e0774c' 'blue' 'purple');
    }
  }
}</pre>

Markup:
<nav role="navigation">
  <ul class="menu-3">
    <li class="menu-3__item"><a href="#">Item 1</a></li>
    <li class="menu-3__item"><a href="#">Item 2</a></li>
    <li class="menu-3__item"><a href="#">Item 3</a></li>
    <li class="menu-3__item"><a href="#">Item 4</a></li>
    <li class="menu-3__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 3.0.4
*/
.menu-3 {
  display: table;
  width: 100%;
}
.menu-3 > .menu-3__item {
  position: relative;
  display: table-cell;
  text-align: center;
  float: none;
  width: 20%;
}
.menu-3 > .menu-3__item > a {
  padding: .75em;
  background-color: #e0774c;
  color: purple;
}
.menu-3 > .menu-3__item > a:hover, .menu-3 > .menu-3__item > a:focus {
  background-color: blue;
  color: yellow;
}
.menu-3 > .menu-3__item > a:active {
  background-color: purple;
  color: yellow;
}

/*
# Stacked Menu

Vertically stacked menu items.

<pre>.menu-4 {
  @extend %unstyled-list;
  @include menu();
  &>.menu-4__item {
    @include menu-item(stacked);
    &>a {
      @extend %block-link;
      padding: .75em;
      @include link-colors($foreground: 'purple' 'yellow' 'yellow', $background: '#e0774c' 'blue' 'purple');
    }
  }
}</pre>

Markup:
<nav role="navigation">
  <ul class="menu-4">
    <li class="menu-4__item"><a href="#">Item 1</a></li>
    <li class="menu-4__item"><a href="#">Item 2</a></li>
    <li class="menu-4__item"><a href="#">Item 3</a></li>
    <li class="menu-4__item"><a href="#">Item 4</a></li>
    <li class="menu-4__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 3.0.5
*/
.menu-4 > .menu-4__item {
  position: relative;
  display: block;
}
.menu-4 > .menu-4__item > a {
  padding: .75em;
  background-color: #e0774c;
  color: purple;
}
.menu-4 > .menu-4__item > a:hover, .menu-4 > .menu-4__item > a:focus {
  background-color: blue;
  color: yellow;
}
.menu-4 > .menu-4__item > a:active {
  background-color: purple;
  color: yellow;
}

/*
# Sub Menu

Styleguide 4
*/
.sub-menu > .sub-menu__item {
  display: block;
  position: relative;
  width: inherit;
}

/*
# Sub Menu

These mixins defines the styles necessary to create dropdown and flyout sub menus. The <code>%unstyled-list</code> placeholder is used to reset the default list styles. The <code>%sub-menu-item</code> placeholder contains styles for the sub menu items. The <code>%block-link</code> placeholder contains styles to display hyperlinks as blocks.

<pre>.sub-menu {
  @extend %unstyled-list;
  @include sub-menu($width: 10em, $position: true);
  & > .sub-menu__item {
    @extend %sub-menu-item;

    &:hover {
      & > .sub-menu {
        @include sub-menu-state($active: true, $flyout: true);
      }
    }
  }
  a {
    @extend %block-link;
    padding: .75em;
    @include link-colors($foreground: 'orange' 'red' 'green', $background: 'blue' 'green' 'red');
  }
}
.menu__item {
  &:hover {
    &>.sub-menu {
      @include sub-menu-state($active: true, $flyout: false);
    }
  }
}</pre>

Markup:
<nav role="navigation">
  <ul class="menu">
    <li class="menu__item"><a href="#">Item 1</a></li>
    <li class="menu__item"><a href="#">Item 2</a></li>
    <li class="menu__item"><a href="#">Item 3</a></li>
    <li class="menu__item"><a href="#">Item 4</a>
      <ul class="sub-menu">
        <li class="sub-menu__item"><a href="#">Sub Menu Item 1</a></li>
        <li class="sub-menu__item"><a href="#">Sub Menu Item 2</a></li>
        <li class="sub-menu__item"><a href="#">Sub Menu Item 3</a></li>
        <li class="sub-menu__item"><a href="#">Sub Menu Item 4</a>
        <ul class="sub-menu">
          <li class="sub-menu__item"><a href="#">Sub Menu Item 1</a></li>
          <li class="sub-menu__item"><a href="#">Sub Menu Item 2</a></li>
          <li class="sub-menu__item"><a href="#">Sub Menu Item 3</a></li>
          <li class="sub-menu__item"><a href="#">Sub Menu Item 4</a></li>
          <li class="sub-menu__item"><a href="#">Sub Menu Item 5</a></li>
        </ul>
        </li>
        <li class="sub-menu__item"><a href="#">Sub Menu Item 5</a></li>
      </ul>
    </li>
    <li class="menu__item"><a href="#">Item 5</a></li>
  </ul>
</nav>

Styleguide 4.0.1
*/
.sub-menu {
  left: -9999px;
  position: absolute;
  z-index: 999;
  width: 10em;
}
.sub-menu > .sub-menu__item:hover > .sub-menu {
  top: 0;
  left: 100%;
}
.sub-menu a {
  padding: .75em;
  background-color: blue;
  color: orange;
}
.sub-menu a:hover, .sub-menu a:focus {
  background-color: green;
  color: red;
}
.sub-menu a:active {
  background-color: red;
  color: green;
}

.menu__item:hover > .sub-menu {
  left: 0;
}

/*
# Button

Styleguide 5
*/
.button,
input.button, .button--large,
input.button--large, .button--xlarge,
input.button--xlarge {
  -webkit-appearance: none;
  -webkit-user-drag: none;
  background-image: none;
  -webkit-border-image: none;
          border-image: none;
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  outline: none;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-transform: none;
  -webkit-transition: background 40ms ease-out, color 40ms ease-out, box-shadow 40ms ease-out;
          transition: background 40ms ease-out, color 40ms ease-out, box-shadow 40ms ease-out;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  white-space: nowrap;
}

/*
# Normal Button

Button mixin for defining button size and colors. The <code>%button</code> placeholder contains required styles that a button needs and is used to group common styles accross all buttons. Both mixin and placeholder are required.

<pre>.button,
input.button {
  @extend %button;
  @include button(normal, $background: #00f, $foreground: #ffa500);
  width: 100%;

  @media screen and (min-width: $small-screen) {
    width: auto;
  }
}</pre>

Markup: <a href="#" class="button">Link Element</a>
<input type="submit" name="submit" value="Input Element" class="button">
<button class="button">Button Element</button>

Styleguide 5.0.1
*/
.button,
input.button {
  background-color: blue;
  color: orange;
  font-size: 1em;
  line-height: 1.5;
  height: 1.5em;
  padding-left: 0.78736em;
  padding-right: 0.78736em;
  width: 100%;
}
.button:hover, .button:focus,
input.button:hover,
input.button:focus {
  background-color: #2a00ff;
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
  color: #ffd000;
}
.button:active,
input.button:active {
  background-color: #0040ff;
  background-image: -webkit-linear-gradient(bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.5);
  color: #ff6500;
}
@media screen and (min-width: 48em) {
  .button,
  input.button {
    width: auto;
  }
}

/*
# Large Button

Button mixin for defining button size and colors. The <code>%button</code> placeholder contains required styles that a button needs and is used to group common styles accross all buttons. Both mixin and placeholder are required.

<pre>.button--large,
input.button--large {
  @extend %button;
  @include button(large, $background: #00f, $foreground: #ffa500);
  width: 100%;

  @media screen and (min-width: $small-screen) {
    width: auto;
  }
}</pre>

Markup: <a href="#" class="button--large">Link Element</a>
<input type="submit" name="submit" value="Input Element" class="button--large">
<button class="button--large">Button Element</button>

Styleguide 5.0.2
*/
.button--large,
input.button--large {
  background-color: blue;
  color: orange;
  font-size: 1.27393em;
  line-height: 1.76619;
  height: 1.76619em;
  padding-left: 1em;
  padding-right: 1em;
  width: 100%;
}
.button--large:hover, .button--large:focus,
input.button--large:hover,
input.button--large:focus {
  background-color: #2a00ff;
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
  color: #ffd000;
}
.button--large:active,
input.button--large:active {
  background-color: #0040ff;
  background-image: -webkit-linear-gradient(bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.5);
  color: #ff6500;
}
@media screen and (min-width: 48em) {
  .button--large,
  input.button--large {
    width: auto;
  }
}

/*
# Xlarge Button

Button mixin for defining button size and colors. The <code>%button</code> placeholder contains required styles that a button needs and is used to group common styles accross all buttons. Both mixin and placeholder are required.

<pre>.button--xlarge,
input.button--xlarge {
  @extend %button;
  @include button(xlarge, $background: #00f, $foreground: #ffa500);
  width: 100%;

  @media screen and (min-width: $small-screen) {
    width: auto;
  }
}</pre>

Markup: <a href="#" class="button--xlarge">Link Element</a>
<input type="submit" name="submit" value="Input Element" class="button--xlarge">
<button class="button--xlarge">Button Element</button>

Styleguide 5.0.3
*/
.button--xlarge,
input.button--xlarge {
  background-color: blue;
  color: orange;
  font-size: 1.27393em;
  line-height: 2.35492;
  height: 2.35492em;
  padding-left: 1.27393em;
  padding-right: 1.27393em;
  width: 100%;
}
.button--xlarge:hover, .button--xlarge:focus,
input.button--xlarge:hover,
input.button--xlarge:focus {
  background-color: #2a00ff;
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
  color: #ffd000;
}
.button--xlarge:active,
input.button--xlarge:active {
  background-color: #0040ff;
  background-image: -webkit-linear-gradient(bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.15));
  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.5);
  color: #ff6500;
}
@media screen and (min-width: 48em) {
  .button--xlarge,
  input.button--xlarge {
    width: auto;
  }
}

/*
# Form

Styleguide 6
*/
.form .form__control, .form .form__textarea {
  -webkit-transition: border 500ms ease, background 500ms ease, box-shadow 500ms ease;
          transition: border 500ms ease, background 500ms ease, box-shadow 500ms ease;
}

.url-addon, .donate-addon {
  position: relative;
}
.url-addon span, .donate-addon span,
.url-addon input,
.donate-addon input {
  display: block;
}
.url-addon span, .donate-addon span {
  bottom: 0;
  position: absolute;
  text-align: center;
  top: 0;
  width: 50px;
  z-index: 0;
}
.url-addon input, .donate-addon input {
  position: relative;
  z-index: 1;
}

/*
# Form Control

The form control mixin defines the styles for form controls. The <code>%form-control</code> placeholder contains common styles for form controls. Both are required.

<pre>.form {
  .form__row {
    @include grid-row();
    margin-bottom: rhythm();
  }
  .form__col {
    @extend %grid-col;
    margin-bottom: rhythm();
  }
  .form__control {
    @extend %form-control;
    @include form-control(xlarge);
  }
  .form__textarea {
    @extend %form-control;
    @include form-control(xlarge, true);
  }
  .title,
  .nickname,
  .state,
  .comments {
    @include grid-col(2, 2, left);
  }
  .first-name,
  .last-name {
    @include grid-col(1, 2, left);
  }

  @media screen and (min-width: $small-screen) {
    .form__control {
      @include form-control(normal);
    }
    .form__textarea {
      @include form-control(normal, true);
    }
    .title,
    .state {
      @include grid-col(3, 9, right, $desktop-gutter);
    }
    .first-name,
    .last-name,
    .nickname {
      @include grid-col(3, 9, right, $desktop-gutter);
    }
    .comments {
      @include grid-col(6, 9, right, $desktop-gutter);
    }
  }
}</pre>

Markup: <form action="" method="get" role="form" class="form">
  <div class="form__row">
    <div class="form__col first-name">
      <label for="first_name">First Name</label>
      <input type="text" name="first_name" placeholder="first name" class="form__control" />
    </div>
    <div class="form__col last-name">
      <label for="last_name">Last Name</label>
      <input type="text" name="last_name" placeholder="last name" class="form__control" />
    </div>
    <div class="form__col nickname">
        <label for="nickname">Nickname</label>
          <input type="text" name="nickname" placeholder="nickname" class="form__control" />
    </div>
  </div>
  <div class="form__row">
    <div class="form__col state">
      <label for="state">State</label>
      <select name="state" class="form__control">
        <option value="alabama">AL</option>
        <option value="alaska">AK</option>
        <option value="arizona">AR</option>
        <option value="california">CA</option>
      </select>
    </div>
  </div>
  <div class="form__row">
    <div class="form__col comments">
      <label for="comments">Comments</label>
      <textarea name="comments" placeholder="comments" class="form__textarea"></textarea>
    </div>
  </div>
</form>

Styleguide 6.0.1
*/
.form .form__row {
  margin-bottom: 1.5em;
}
.form .form__col {
  margin-bottom: 1.5em;
}
.form .form__control {
  font-size: 1.27393em;
  line-height: 1.17746;
  padding: 0.42857em;
  height: 2.35492em;
}
.form .form__control:focus {
  background-color: #f6fbff;
  border-color: #6dbbff;
  box-shadow: 0 0 5px rgba(0, 116, 217, 0.6);
}
.form .form__textarea {
  font-size: 1.27393em;
  line-height: 1.17746;
  padding: 0.42857em;
  min-height: 11.7746em;
}
.form .form__textarea:focus {
  background-color: #f6fbff;
  border-color: #6dbbff;
  box-shadow: 0 0 5px rgba(0, 116, 217, 0.6);
}
.form .title,
.form .nickname,
.form .state,
.form .comments {
  width: 100%;
  padding: 0 0 0 10px;
}
.form .first-name,
.form .last-name {
  width: 50%;
  padding: 0 0 0 10px;
}
@media screen and (min-width: 48em) {
  .form .form__control {
    font-size: 1em;
    line-height: 1.5;
    padding: 0.07143em 0.21429em;
    height: 1.5em;
  }
  .form .form__control:focus {
    background-color: #f6fbff;
    border-color: #6dbbff;
    box-shadow: 0 0 5px rgba(0, 116, 217, 0.6);
  }
  .form .form__textarea {
    font-size: 1em;
    line-height: 1.5;
    padding: 0.07143em 0.21429em;
    min-height: 7.5em;
  }
  .form .form__textarea:focus {
    background-color: #f6fbff;
    border-color: #6dbbff;
    box-shadow: 0 0 5px rgba(0, 116, 217, 0.6);
  }
  .form .title,
  .form .state {
    width: 33.33333%;
    padding: 0 17.835px 0 0;
  }
  .form .first-name,
  .form .last-name,
  .form .nickname {
    width: 33.33333%;
    padding: 0 17.835px 0 0;
  }
  .form .comments {
    width: 66.66667%;
    padding: 0 17.835px 0 0;
  }
}

/*
# Form Control Addon

The form control addon mixin defines the styles for prefixed or appended label addons. The <code>%form-control-addon</code> placeholder contains common styles used for addons. Both are required.

<pre>.url,
.donate {
  @include grid-col(2, 2, left);
}
.url-addon {
  @extend %form-control-addon;
  @include form-control-addon(xlarge, true);
}
.donate-addon {
  @extend %form-control-addon;
  @include form-control-addon(xlarge, false);
}
@media screen and (min-width: $small-screen) {
  .url-addon {
    @include form-control-addon(normal, true);
  }
  .donate-addon {
    @include form-control-addon(normal, false);
  }
  .url,
  .donate {
    @include grid-col(3, 9, right, $desktop-gutter);
  }
}</pre>

Markup: <form action="" method="get" role="form" class="form">
  <div class="form__row">
    <div class="form__col url">
      <label for="url">Website</label>
      <div class="url-addon">
        <span>http://</span>
        <input type="text" name="url" placeholder="website address" class="form__control" />
      </div>
    </div>
  </div>
  <div class="form__row">
    <div class="form__col dontate">
      <label for="donate">Amount</label>
      <div class="donate-addon">
        <span>.00</span>
        <input type="number" name="donate" placeholder="10" class="form__control" />
      </div>
    </div>
  </div>
</form>

Styleguide 6.0.2
*/
.url,
.donate {
  width: 100%;
  padding: 0 0 0 10px;
}

.url-addon {
  padding-left: 48px;
}
.url-addon span {
  background: #cccccc;
  font-size: 1.27393em;
  line-height: 2.35492;
  left: 0;
}

.donate-addon {
  padding-right: 48px;
}
.donate-addon span {
  background: #cccccc;
  font-size: 1.27393em;
  line-height: 2.35492;
  right: 0;
}

@media screen and (min-width: 48em) {
  .url-addon {
    padding-left: 48px;
  }
  .url-addon span {
    background: #cccccc;
    font-size: 1em;
    line-height: 1.5;
    left: 0;
  }

  .donate-addon {
    padding-right: 48px;
  }
  .donate-addon span {
    background: #cccccc;
    font-size: 1em;
    line-height: 1.5;
    right: 0;
  }

  .url,
  .donate {
    width: 33.33333%;
    padding: 0 17.835px 0 0;
  }
}
/*
# Media

Styleguide 7
*/
.media {
  margin-bottom: 1.5em;
  overflow: auto;
}

.media__element {
  line-height: 0;
}

.media__content > :first-child {
  margin-top: 0;
}
.media__content > :last-child {
  margin-bottom: 0;
}

/*
# Media Object

The media-element mixin defines the styles necessary to layout media along side text. The <code>%media</code> placeholder contains common styles for media blocks. The <code>%media-element</code> placeholder contains common styles for media elements. The <code>%media-content</code> placeholder contains common styles used for all media content. All placeholers and mixins are required.

<pre>.media {
  @extend %media;
}
.media__element {
  @extend %media-element;
  @include media-element(none, 150px);

  @media screen and (min-width: $small-screen) {
    @include media-element();
  }
}
.media__content {
  @extend %media-content;
}</pre>

Markup: <div class="media">
  <div class="media__element"><img src="http://fpoimg.com/150x125?text=Preview" alt=""></div>
  <div class="media__content">
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
  </div>
</div>

Styleguide 7.0.1
*/
.media__element {
  float: none;
  margin-left: auto;
  margin-right: auto;
  width: 150px;
}
@media screen and (min-width: 48em) {
  .media__element {
    float: left;
    margin-right: 1em;
    width: 150px;
  }
}

/*
# Alert

Styleguide 8
*/
/*
# Default Alert

The alert mixin defines the base styles for a typical alert or validation message.

Usage:
<pre>.alert,
.alert-notice,
.alert-error,
.alert-success,
.alert-warning {
  @include alert();
}</pre>

Markup: <div class="alert">
  <p>This is an alert.</p>
</div>

Styleguide 8.0.1
*/
.alert,
.alert-notice,
.alert-error,
.alert-success,
.alert-warning {
  padding: 1.35714em 1em !important;
  border-width: 1px;
  border-style: solid;
}
.alert > :last-child,
.alert-notice > :last-child,
.alert-error > :last-child,
.alert-success > :last-child,
.alert-warning > :last-child {
  margin-bottom: 0;
}

/*
# Notice Alert

The alert type mixin defines the colors that will be rendered on the alert object.

Usage:
<pre>.alert-notice {
  @include alert-type(notice);
}</pre>

Markup: <div class="alert-notice">
  <p>This is an notice alert.</p>
</div>

Styleguide 8.0.2
*/
.alert-notice {
  background-color: #c4e4ff;
  border-color: #0074d9;
  color: #0074d9;
}

/*
# Error Alert

The alert type mixin defines the colors that will be rendered on the alert object.

Usage:
<pre>.alert-error {
  @include alert-type(error);
}</pre>

Markup:
<div class="alert-error">
  <p>This is an error alert.</p>
</div>

Styleguide 8.0.3
*/
.alert-error {
  background-color: #ffd9d7;
  border-color: #ff4136;
  color: #ff4136;
}

/*
# Success Alert

The alert type mixin defines the colors that will be rendered on the alert object.

Usage:
<pre>.alert-success {
  @include alert-type(success);
}</pre>

Markup:
<div class="alert-success">
  <p>This is an success alert.</p>
</div>

Styleguide 8.0.4
*/
.alert-success {
  background-color: #d5f5d8;
  border-color: #2ecc40;
  color: #2ecc40;
}

/*
# Warning Alert

The alert type mixin defines the colors that will be rendered on the alert object.

Usage:
<pre>.alert-warning {
  @include alert-type(warning);
}</pre>

Markup:
<div class="alert-warning">
  <p>This is an warning alert.</p>
</div>

Styleguide 8.0.5
*/
.alert-warning {
  background-color: #fff8cc;
  border-color: #ffdc00;
  color: #ffdc00;
}

/*
# Columns

Styleguide 9
*/
.columns {
  orphans: 2;
  widows: 2;
}

/*
# Columns

The Column mixin contains the styles to apply multiple columns of text on an block element. The <code>%column</code> placeholder is used to add widow and orphan control to the columns. Both are required.

<pre>.columns {
  @extend %column;
  @include column(3);
}</pre>

Markup:
<div class="columns">
  <p>Aenean lacinia bibendum nulla sed consectetur. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Donec sed odio dui. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Sed posuere consectetur est at lobortis. Donec sed odio dui.</p>
  <p>Sed posuere consectetur est at lobortis. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
  <p>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Maecenas sed diam eget risus varius blandit sit amet non magna. Nullam id dolor id nibh ultricies vehicula ut id elit. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
  <p>Vestibulum id ligula porta felis euismod semper. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Maecenas faucibus mollis interdum. Cras mattis consectetur purus sit amet fermentum. Maecenas sed diam eget risus varius blandit sit amet non magna. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>
</div>

Styleguide 9.0.1
*/
.columns {
  -webkit-column-count: 3;
     -moz-column-count: 3;
          column-count: 3;
  -webkit-column-gap: 1.618em;
     -moz-column-gap: 1.618em;
          column-gap: 1.618em;
}

.text-align-left {
  text-align: left;
}

.text-align-right {
  text-align: right;
}

.text-align-center {
  text-align: center;
}

.radius {
  border-radius: 4px;
}

.top-left-radius {
  border-top-left-radius: 4px;
}

.top-right-radius {
  border-top-right-radius: 4px;
}

.bottom-left-radius {
  border-bottom-left-radius: 4px;
}

.bottom-right-radius {
  border-bottom-right-radius: 4px;
}

.float-left {
  float: left;
}

img.float-left {
  margin-right: 14px;
}

.float-right {
  float: right;
}

img.float-right {
  margin-left: 14px;
}

.stick-to-top {
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
}

.stick-to-bottom {
  bottom: 0;
  left: 0;
  position: fixed;
  width: 100%;
}

@media screen and (max-width: 48em) {
  .hide-from-small-device {
    display: none;
  }
}

@media screen and (min-width: 48em) {
  .show-on-small-device {
    display: none;
  }
}

.hidden {
  display: none !important;
  visibility: hidden;
}

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.invisible {
  visibility: hidden;
}

/*
# Grid Blocks

Styleguide 10
*/
.grid-block {
  display: inline-block;
  margin-bottom: 1.5em;
  margin-right: -4px;
  vertical-align: top;
}
.grid-block > :last-child {
  margin-bottom: 0;
}

/*
# Grid Block

The grid block mixin contains the styles needed to create fixed width inline block elements that are laid out in a grid format. The <code>%grid-block</code> placeholder contains the base styles for the grid blocks. Both are required.

<pre>.grid-block {
  @extend %grid-block;
  @include grid-block($container-width: 320px, $columns: 2);

  @media screen and (min-width: $small-screen) {
    @include grid-block($container-width: 800px, $columns: 4);
  }
}</pre>

Markup:
<div class="grid-block"><img src="http://fpoimg.com/200x200"></div>
<div class="grid-block"><img src="http://fpoimg.com/200x200"></div>
<div class="grid-block"><img src="http://fpoimg.com/200x200"></div>
<div class="grid-block"><img src="http://fpoimg.com/200x200"></div>

Styleguide 10.0.1
*/
.grid-block {
  padding-left: 10px;
  padding-right: 10px;
  width: 160px;
}
@media screen and (min-width: 48em) {
  .grid-block {
    padding-left: 10px;
    padding-right: 10px;
    width: 200px;
  }
}

/*
# Label

Styleguide 11
*/
.label {
  display: inline-block;
  letter-spacing: .05em;
  padding: 0 .5em;
  vertical-align: middle;
}

/*
# label

The label mixin contains the styles needed to create inline labels. The <code>%label</code> placeholder contains the base styles for the labels. Both are required.

<pre>.label {
  @extend %label;
  @include label($size: normal, $background: $light-gray, $foreground: $dark-gray);
}</pre>

Markup:
<p>Sample text. <span class="label">new</span></p>

Styleguide 11.0.1
*/
.label {
  background: #cccccc;
  color: #666666;
  font-size: 0.78736em;
}
